

<div class="accordion" id="accordionExample">
  <div class="accordion-item">
    <h2 class="accordion-header" id="headingOne">
      <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
        Выбор сообщества
      </button>
    </h2>
    <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
      <div class="accordion-body">
        <% if @setting %>
          <% if @setting.vk_access_token.blank?  %>
            <p>
              У нас нет токена пользователя для внесения изменений в VK, либо он невалиден.
              Необходимо авторизоваться. Процесс авторизации состоит из 1 шагов.
            </p>
            <p>
              ШАГ 1: Сначала редиректим на ВК для авторизации и запроса пермишенов:
            </p>
            <p>
              <code>
                REQUEST: <br>
                <%= @authorize_url %>
              </code>
            </p>

            <%= link_to "Авторизоваться в VK", @authorize_url, class: 'btn btn-primary' %>

            <hr>

            <% if params.has_key?(:code) %>
              <p>
                ШАГ 2: В ответе получили <code><%= "code=#{params[:code]}" %></code>, он находится в URL. С его помощью мы завершаем процесс авторизации и получаем access_token, user_id.
              </p>
              <p>
                <code>
                  REQUEST: <br>
                  <%= @incomplete_authorization_url + params[:code] %>
                </code>
              </p>
              <%= link_to "Получить токен", pages_authorize_path(code: params[:code]), class: 'btn btn-primary' %>
            <% end %>
          <% else %>
            <p>
              Мы завершили авторизацию - у нас есть access_token (user_token), действительный в течение 24 часов.
              Теперь с помощью него получаем список сообществ пользователя, где он админ.
            </p>
            <p>
              <code>REQUEST:</code>
              <code>Здесь запрос</code>
            </p>
            <%= link_to "Получить список сообществ", class: 'btn btn-primary' %>
            <a href="https://api.vk.com/method/groups.get?params[user_id]=251000&params[extended]=1&params[filter]=admin&params[count]=1000&params[v]=5.131">LINK</a>

          <% end %>
        <% end %>

        <% if !params["access_token"].nil? %>
          HELLO WORLD!
        <% end %>

      </div>
    </div>
  </div>
  <div class="accordion-item">
    <h2 class="accordion-header" id="headingTwo">
      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
        Accordion Item #2
      </button>
    </h2>
    <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample">
      <div class="accordion-body">
        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
      </div>
    </div>
  </div>
  <div class="accordion-item">
    <h2 class="accordion-header" id="headingThree">
      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
        Accordion Item #3
      </button>
    </h2>
    <div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree" data-bs-parent="#accordionExample">
      <div class="accordion-body">
        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
      </div>
    </div>
  </div>
</div>
